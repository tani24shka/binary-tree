class Solution {
public:
    int maxt(vector<int>& nums)
    {
        int s=INT_MIN;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]>s)
            s=nums[i];
        }
        return s;
    }

    int sum(vector<int>& nums)
    {
        int s=0;
        for(int i=0;i<nums.size();i++)
        {
            s+=nums[i];
        }
        return s;
    }
    bool ispossible(vector<int>& nums,int target, int k)
    {
        int temp=0;
        for(int i=0;i<nums.size();i++)
        {
            if(temp+nums[i]<=target)
            temp+=nums[i];
            else
            {
                if(nums[i]<=target)
            temp=nums[i];
            else
            return false;
            k--;
            }
             if(k<0)
        return false;
        }
       
        return true;
    }
    int splitArray(vector<int>& nums, int k) {
        int n=nums.size();
        int start=maxt(nums);
        int end=sum(nums);
        int ans=sum(nums);
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(ispossible(nums,mid,k-1)==true)
            {
                ans=min(mid,ans);
                end=mid-1;
            }
            else
            start=mid+1;
        }
        return ans;
    }
};
