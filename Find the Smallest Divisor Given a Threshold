class Solution {
public:
    int maxt(vector<int>& nums)
    {int max=INT_MIN;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]>max)
            max=nums[i];
        }
        return max;
    }
   int isPossible(vector<int> &nums, int mid) {
        int cnt = 0;
        for(int i=0 ; i<nums.size() ; i++) {
            cnt += (nums[i]+mid-1)/mid;
        }
        return cnt;
    }
    int smallestDivisor(vector<int>& nums, int threshold) {
        int low=1 , high=maxt(nums);
        while(low <= high) {
            int mid = low + (high-low)/2;

            int k=isPossible(nums,mid);
            if(k<=threshold) high = mid-1;
            else low = mid+1;
        }
        return low;
    }
};
