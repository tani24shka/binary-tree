bool ispossible(vector<int> &stalls, int k,int mid,int n)
{
    int c=1;
    int last=stalls[0];
    for(int i=1;i<n;i++)
    {
        if(stalls[i]-last>=mid)
        {
            c++;
            last=stalls[i];
        }
    }
    if(c>=k)
    return true;
    return false;
}
int aggressiveCows(vector<int> &stalls, int k)
{
    //    Write your code here.
    int n=stalls.size();
    sort(stalls.begin(),stalls.end());
    int start=1;
    int end=stalls[n-1]-stalls[0];
    while(start<=end)
    {
        int mid=(start+end)/2;
        if (ispossible(stalls, k, mid,n) == true) {
         start=mid+1;
          
        }
        else
        end = mid - 1;
    }
    return end;
}
